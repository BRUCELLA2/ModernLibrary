# Test message
test                                                  = TESTBUNDLE-------------

# All DAO
permissionDenied                                      = Un problème de droits d'accès à la base de données a été détecté.
dataAccessResourceFailure                             = La connexion à la base de données a échoué.
dataAccess                                            = Un problème technique au niveau de la base de données est survenu.

# AuthorDao
authorDao.getAuthor.notFound                          = L'auteur demandé n'a pas été trouvé.
authorDao.getBookAuthors.notFound                     = Aucun auteur n'a été trouvé.
authorDao.updateAuthor.notFound                       = L'auteur à modifier n'a pas été trouvé. La mise à jour n'a pas été faite.
authorDao.updateAuthor.integrityViolation             = Les données n'étant pas conformes, la mise à jour de l'auteur n'a pu être réalisée.
authorDao.insertAuthor.duplicate                      = Un auteur existe déjà avec cet identifiant.
authorDao.insertAuthor.integrityViolation             = Les données n'étant pas conformes, la création de l'auteur n'a pu être réalisée.
authorDao.deleteAuthor.notFound                       = L'auteur à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# BookDao
bookDao.getBook.notFound                              = Le livre demandé n'a pas été trouvé.
bookDao.updateBook.notFound                           = Le livre à modifier n'a pas été trouvé. La mise à jour n'a pas été faite.
bookDao.updateBook.integrityViolation                 = Les données n'étant pas conformes, la mise à jour du livre n'a pu être réalisée.
bookDao.insertBook.duplicate                          = Un livre existe déjà avec cet identifiant.
bookDao.insertBook.integrityViolation                 = Les données n'étant pas conformes, la création du livre n'a pu être réalisée.
bookDao.deleteBook.notFound                           = Le livre à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# BookBorrowedDao
bookBorrowedDao.getBookBorrowed.notFound              = L'emprunt n'a pas été trouvé.
bookBorrowedDao.updateBookBorrowed.notFound           = L'emprunt n'a pas été trouvé. La mise à jour n'a pas été faite.
bookBorrowedDao.updateBookBorrowed.integrityViolation = Les données n'étant pas conformes, la mise à jour de l'emprunt n'a pas pu être réalisée.
bookBorrowedDao.insertBookBorrowed.duplicate          = Un emprunt existe déjà avec ces identifiants.
bookBorrowedDao.insertBookBorrowed.integrityViolation = Les données n'étant pas conformes, la création de l'emprunt n'a pu être réalisée.
bookBorrowedDao.deleteBookBorrowed.notFound           = L'emprunt à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# GenreDao
genreDao.getGenre.notFound                            = Le genre n'a pas été trouvé.
genreDao.updateGenre.notFound                         = Le genre à modifier n'a pas été trouvé. La mise à jour n'a pas été faite.
genreDao.updateGenre.integrityViolation               = Les données n'étant pas conformes, la mise à jour du genre n'a pas pu être réalisée.
genreDao.insertGenre.duplicate                        = Un genre existe déjà avec cet identifiant.
genreDao.insertGenre.integrityViolation               = Les données n'étant pas conformes, la création du genre n'a pu être réalisée.
genreDao.deleteGenre.notFound                         = Le genre à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# PublisherDao
publisherDao.getPublisher.notFound                    = L'éditeur n'a pas été trouvé.
publisherDao.updatePublisher.notFound                 = L'éditeur à modifier n'a pas été trouvé. La mise à jour n'a pas été faite.
publisherDao.updatePublisher.integrityViolation       = Les données n'étant pas conformes, la mise à jour de l'éditeur n'a pu être faite.
publisherDao.insertPublisher.duplicate                = Un éditeur existe déjà avec cet identifiant.
publisherDao.insertPublisher.integrityViolation       = Les données n'étant pas conformes, la création de l'éditeur n'a pas été réalisée.
publisherDao.deletePublisher.notFound                 = L'éditeur à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# StockDao
stockDao.getStock.notFound                            = Le stock n'a pas été trouvé.
stockDao.getStockForBook.notFound                     = Le stock pour le livre n'a pas été trouvé.
stockDao.updateStock.notFound                         = Le stock à modifier n'a pas été trouvé. La mise à jour du stock n'a pas pu être réalisée.
stockDao.updateStock.integrityViolation               = Les données n'étant pas conformes, la mise à jour n'a pu être faite.
stockDao.insertStock.duplicate                        = Un stock existe déjà avec cet identifiant.
stockDao.insertStock.integrityViolation               = Les données n'étant pas conformes, la création du stock n'a pas été réalisée.
stockDao.deleteStock.notFound                         = Le stock à supprimer n'a pas été trouvé. La suppression n'a pas été réalisée.

# AddressDao
addressDao.getAddress.notFound                        = L'adresse n'a pas été trouvée.
addressDao.updateAddress.notFound                     = L'adresse à modifier n'a pas été trouvée. La mise à jour de l'adresse n'a pas pu être réalisée.
addressDao.updateAddress.integrityViolation           = Les données n'étant pas conformes, la mise à jour n'a pu être faite.
addressDao.insertAddress.duplicate                    = Une adresse existe déjà avec cet identifiant.
addressDao.insertAddress.integrityViolation           = Les données n'étant pas conformes, la création de l'adresse n'a pas été réalisée.
addressDao.deleteAddress.notFound                     = L'adresse à supprimer n'a pas été trouvée. La suppression n'a pas été réalisée.

# RoleDao
roleDao.getRole.notFound                              = Le role n'a pas été trouvée.
roleDao.getRolesForUser.notFound                      = Aucun role n'a été trouvée pour l'utilisateur.
roleDao.updateRole.notFound                           = Le role à modifier n'a pas été trouvé. La mise à jour du role n'a pas pu être réalisée.
roleDao.updateRole.integrityViolation                 = Les données n'étant pas conformes, la mise à jour n'a pu être faite.
roleDao.insertRole.duplicate                          = Le Role  existe déjà avec cet identifiant.
roleDao.insertRole.integrityViolation                 = Les données n'étant pas conformes, la création de l'adresse n'a pas été réalisée.
roleDao.deleteRole.notFound                           = Le role à supprimer n'a pas été trouvée. La suppression n'a pas été réalisée.

# UserDao
UserDao.getUser.notFound                              = L'utilisateur n'a pas été trouvé.
UserDao.updateUser.notFound                           = L'utilisateur à modifier n'a pas été trouvé. La mise à jour de l'utilisateur n'a pu être faite.
UserDao.updateUser.integrityViolation                 = Les données n'étant pas conformes, la mise à jour n'a pu être faite.
userDao.insertUser.duplicate                          = Un utilisateur existe déjà avec cet identifiant.
userDao.insertUser.integrityViolation                 = Les données n'étant pas conformes, la création de l'utilisateur n'a pas été réalisée.
userDao.deleteUser.notFound                           = L'utilisateur à supprimer n'a pas été trouvée. La suppression n'a pas été réalisée.